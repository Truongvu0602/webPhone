import { createAsyncThunk } from "@reduxjs/toolkit";
import { authorizedRequest } from "../../../helper/authorizedRequest";

export const getCartOder = createAsyncThunk(
  "order/getCartOder",
  async (_, thunkAPI) => {
    try {
      const response = await authorizedRequest(
        "get",
        "/order/getOder",
        null,
        thunkAPI
      );
      console.log("D·ªØ li·ªáu gi·ªè h√†ng t·ª´ API:", response);
      return response;
    } catch (error) {
      console.error("L·ªói khi g·ªçi API getOder:", error);
      return thunkAPI.rejectWithValue(error.response?.data || error.message);
    }
  }
);

export const createOrder = createAsyncThunk(
  "order/createOrder",
  async (orderData, thunkAPI) => {
    try {
      console.log("üì¶ D·ªØ li·ªáu ƒë∆°n h√†ng g·ª≠i l√™n:", orderData); // Log d·ªØ li·ªáu g·ª≠i

      const response = await authorizedRequest(
        "post",
        "/order/create",
        orderData,
        thunkAPI
      );

      console.log("‚úÖ Ph·∫£n h·ªìi t·ª´ server sau khi t·∫°o ƒë∆°n:", response); // Log ph·∫£n h·ªìi t·ª´ server

      return response;
    } catch (error) {
      console.error(
        "‚ùå L·ªói khi g·ªçi API create:",
        error.response?.data || error.message
      );
      return thunkAPI.rejectWithValue(error.response?.data || error.message);
    }
  }
);
export const getOrder = createAsyncThunk(
  "order/getOderProduct",
  async (_, thunkAPI) => {
    try {
      const response = await authorizedRequest(
        "get",
        "/order/getOderProduct",
        null,
        thunkAPI
      );
      console.log("D·ªØ li·ªáu gi·ªè h√†ng t·ª´ API:", response);
      return response;
    } catch (error) {
      console.error("L·ªói khi g·ªçi API getOder:", error);
      return thunkAPI.rejectWithValue(error.response?.data || error.message);
    }
  }
);
